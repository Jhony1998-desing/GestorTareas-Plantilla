{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"AddTask\",\n  data() {\n    return {\n      newTask: \"\",\n      // Campo de entrada para la nueva tarea\n      newTasks: [] // Lista para las tareas nuevas\n    };\n  },\n  methods: {\n    // Agregar una nueva tarea mediante POST\n    async addTask() {\n      if (this.newTask.trim() === \"\") return;\n      try {\n        const response = await axios.post('https://dummyjson.com/todos/add', {\n          todo: this.newTask,\n          completed: false,\n          userId: 1 // Este campo puede cambiar según la API\n        });\n\n        // Agregar la nueva tarea a la lista de tareas nuevas\n        this.newTasks.unshift(response.data);\n        this.newTask = \"\"; // Limpiar el campo de entrada\n      } catch (error) {\n        console.error(\"Error al agregar tarea:\", error);\n        alert(\"No se pudo agregar la tarea.\");\n      }\n    },\n    // Cambiar el estado de una tarea\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","newTask","newTasks","methods","addTask","trim","response","post","todo","completed","userId","unshift","error","console","alert","toggleTaskCompletion","task"],"sources":["C:\\Users\\lione\\Downloads\\gestion de planilla\\src\\views\\AddTask.vue"],"sourcesContent":["<template>\n    <div class=\"add-task-container\">\n        <h1>Añadir Tarea</h1>\n        <!-- Campo de entrada para agregar nueva tarea -->\n        <div class=\"input-group\">\n            <input \n                v-model=\"newTask\" \n                @keyup.enter=\"addTask\" \n                placeholder=\"Añadir nueva tarea\" \n                class=\"task-input\"\n            />\n            <button @click=\"addTask\" class=\"add-button\">Añadir</button>\n        </div>\n\n        <!-- Mostrar solo las tareas nuevas -->\n        <div v-if=\"newTasks.length > 0\" class=\"task-list\">\n            <div v-for=\"task in newTasks\" :key=\"task.id\" class=\"task-item\">\n                <span :class=\"{ completed: task.completed }\">{{ task.todo }}</span>\n                <div class=\"task-actions\">\n                    <button @click=\"toggleTaskCompletion(task)\" class=\"complete-btn\">\n                        {{ task.completed ? 'Desmarcar' : 'Completar' }}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: \"AddTask\",\n    data() {\n        return {\n            newTask: \"\", // Campo de entrada para la nueva tarea\n            newTasks: [], // Lista para las tareas nuevas\n        };\n    },\n    methods: {\n        // Agregar una nueva tarea mediante POST\n        async addTask() {\n            if (this.newTask.trim() === \"\") return;\n\n            try {\n                const response = await axios.post('https://dummyjson.com/todos/add', {\n                    todo: this.newTask,\n                    completed: false,\n                    userId: 1, // Este campo puede cambiar según la API\n                });\n\n                // Agregar la nueva tarea a la lista de tareas nuevas\n                this.newTasks.unshift(response.data);\n                this.newTask = \"\"; // Limpiar el campo de entrada\n            } catch (error) {\n                console.error(\"Error al agregar tarea:\", error);\n                alert(\"No se pudo agregar la tarea.\");\n            }\n        },\n\n        // Cambiar el estado de una tarea\n        toggleTaskCompletion(task) {\n            task.completed = !task.completed;\n        },\n    }\n};\n</script>\n\n<style scoped>\n.add-task-container {\n    padding: 20px;\n    max-width: 400px;\n    margin: 0 auto;\n    font-family: 'Arial', sans-serif;\n    background-color: #f4f7fc;\n    border-radius: 8px;\n}\n\nh1 {\n    text-align: center;\n    color: #4CAF50;\n    margin-bottom: 20px;\n}\n\n.input-group {\n    display: flex;\n    margin-bottom: 10px;\n}\n\n.task-input {\n    flex-grow: 1;\n    padding: 8px;\n    margin-right: 5px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.add-button {\n    padding: 8px 12px;\n    border: none;\n    border-radius: 4px;\n    background-color: #007bff;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n}\n\n.add-button:hover {\n    background-color: #45a049;\n}\n\n.task-list {\n    margin-top: 20px;\n}\n\n.task-item {\n    background-color: #f9f9f9;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    padding: 15px;\n    width: 100%;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.task-actions {\n    display: flex;\n    gap: 10px;\n}\n\n.complete-btn {\n    padding: 5px 10px;\n    border-radius: 5px;\n    background-color: #8BC34A;\n    color: white;\n    cursor: pointer;\n}\n\n.complete-btn:hover {\n    background-color: #7bb53d;\n}\n\n.completed {\n    text-decoration: line-through;\n    color: #888;\n}\n\nspan {\n    font-size: 16px;\n    color: #333;\n    flex-grow: 1;\n}\n</style>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MAAE;MACbC,QAAQ,EAAE,EAAE,CAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA,MAAMC,OAAOA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,MAAM,EAAE,EAAE;MAEhC,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,iCAAiC,EAAE;UACjEC,IAAI,EAAE,IAAI,CAACP,OAAO;UAClBQ,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE,CAAC,CAAE;QACf,CAAC,CAAC;;QAEF;QACA,IAAI,CAACR,QAAQ,CAACS,OAAO,CAACL,QAAQ,CAACN,IAAI,CAAC;QACpC,IAAI,CAACC,OAAM,GAAI,EAAE,EAAE;MACvB,EAAE,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CE,KAAK,CAAC,8BAA8B,CAAC;MACzC;IACJ,CAAC;IAED;IACAC,oBAAoBA,CAACC,IAAI,EAAE;MACvBA,IAAI,CAACP,SAAQ,GAAI,CAACO,IAAI,CAACP,SAAS;IACpC;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}